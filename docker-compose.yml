version: "3.8"
name: esn
services:
  app-database:
    container_name: app-database
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASS}
      - POSTGRES_DATABASE=${DATABASE_NAME}
    ports:
      - "5432:5432"
    networks:
      - esn-cloud-layer-network

  app-backend:
    container_name: esn-app-backend
    build:
      context: ./esn-app-backend-op
    volumes:
      - ./esn-app-backend-op:/app
    environment:
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASS=${DATABASE_PASS}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - ESN_PRED_NODE_URL=${ESN_PRED_NODE_URL}
      - SECRET_KEY=${SECRET_KEY}
    ports:
      - "8010:8010"
    restart: always
    depends_on:
      - app-database
    networks:
      - esn-cloud-layer-network

  cloud-redis:
    container_name: cloud-redis
    image: redis:7.0-alpine
    command: redis-server --port 6380
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: 6380
        published: "6380"
        protocol: tcp
    restart: always
    networks:
      - esn-cloud-layer-network

  # --- ESN Cloud Predictive Node ---
  predictive-node:
    container_name: predictive-node
    build:
      context: ./esn-gateway-microservices/esn-predictive-node
      dockerfile: Dockerfile.cloud
    volumes:
      - ./esn-gateway-microservices/esn-predictive-node:/app
    environment:
      SECRET_KEY: "${SECRET_KEY}"
      ESN_API_URL: "${ESN_API_URL}"
      USE_TFLITE: "${USE_TFLITE}"
      ESN_REDIS_URL: "${ESN_REDIS_URL}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
    ports:
      - "8011:8011"
    depends_on:
      - cloud-redis
    networks:
      - esn-cloud-layer-network

  celery-worker:
    container_name: celery-worker
    build:
      context: ./esn-predictive-node/app/celery_worker
      dockerfile: Dockerfile.cloud
    volumes:
      - ./esn-predictive-node:/app
    environment:
      USE_TFLITE: "${USE_TFLITE}"
      ESN_REDIS_URL: "${ESN_REDIS_URL}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
    depends_on:
      - predictive-node
      - cloud-redis
    networks:
      - esn-cloud-layer

networks:
  esn-cloud-layer-network:
    name: esn-cloud-layer-network
    driver: bridge
